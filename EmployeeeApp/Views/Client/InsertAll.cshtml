@model Creatmodel



    <div class="container m-4 shadow-lg rounded-2  p-5">
        <h2 class="text-center"> Client Entry Form</h2>
    <form id="EntryForm" asp-controller="Client" asp-action="InsertAll" method="post" class="my-3">
            <label>
            Name of Client<span class="text-danger">*</span>
            </label>
        <input type="text" asp-for="Name" class="form-control" required /> 



        <label>
            Role of Client<span class="text-danger">*</span>
        </label>
       
         <select asp-for="Role" class="form-select" required>
                <option value="">Select Your Role</option>
                <option value="Employee">Employee</option>
                <option value="Curent Client">Curent Client</option>
                <option value="Past User">Formmer Client</option>
         </select>
    
        <label>
                Email<span class="text-danger">*</span>
        </label>
        <input type="email" asp-for="Email" class="form-control" required />

        <label>
            Address<span class="text-danger">*</span>
        </label>
       
        <input type="text" id="AddressValue" placeholder="Enter Your Address" class="form-control"/>
         <button type="button" class="btn btn-secondary" id="AddAddressButton">Add Address</button>
     

      

          <table class="table table-sm table-bordered mt-3">
            <thead>
                <tr>
                    <th>Address</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody id="addressList">
              
            </tbody>
            </table>
        <input type="hidden" asp-for="AddressJson" id="AddressesInput" />

        <button type="submit" class="btn align-self-center btn-outline-primary mt-3"><i class="bi bi-bookmark-check"></i>Save Client</button>
        <a class="btn btn-secondary mx-1 mt-3" asp-controller="Client" asp-action="Index">Cancel</a>
        </form>

    </div>

<script>
    document.addEventListener("DOMContentLoaded", function() {
        let addressList = [];

     
        document.getElementById("AddAddressButton").addEventListener("click", addAddress);

        document.getElementById("AddressValue").addEventListener("keypress", function(event) {
            if (event.key === "Enter") {
                event.preventDefault();
                addAddress();
            }
        });

        function addAddress() {
            const addressValue = document.getElementById("AddressValue").value.trim();
            if (addressValue) {
                addressList.push(addressValue);
                updateAddressList();
                document.getElementById("AddressValue").value = "";
            }
        }

        function deleteAddress(index) {
          
            addressList.splice(index, 1);
            updateAddressList();
        }

        function EditAddress(index) {
            const newAddress = prompt("Enter new address:", addressList[index]);
            if (newAddress !== null && newAddress.trim() !== "") { 
                addressList[index] = newAddress.trim();
                updateAddressList();
            }
        }

        function updateAddressList() {
            const addressListElement = document.getElementById("addressList");
            addressListElement.innerHTML = "";

            addressList.forEach((address, index) => {
                let addressItem = address.trim();
                let row = document.createElement("tr"); 
                let addressCell = document.createElement("td");
                addressCell.textContent = addressItem;
                row.appendChild(addressCell);

                let actionCell = document.createElement("td");
                let deleteButton = document.createElement("button");
                deleteButton.textContent = "Delete";
                deleteButton.className = "btn btn-outline-danger btn-sm me-2";
                deleteButton.addEventListener("click", () => deleteAddress(index));


                let editButton = document.createElement("button");
                editButton.textContent = "Edit";
                editButton.className = "btn btn-outline-warning btn-sm";
                editButton.addEventListener("click", () => EditAddress(index));

                actionCell.appendChild(deleteButton);
                actionCell.appendChild(editButton);
                row.appendChild(actionCell);

               

                addressListElement.appendChild(row);
            });
             document.getElementById("AddressesInput").value = JSON.stringify(addressList);


           // JSON.stringify(addressList);
          //  does this format store data into indivisual string separetyed for the list data type so later can a loop run on that list as diffrent entities
        }
       
    });
</script>
    
